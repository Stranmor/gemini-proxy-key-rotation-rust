/*
 * Gemini Proxy Dashboard Styles
 *
 * This stylesheet defines the visual appearance for the Gemini Proxy Dashboard.
 * It utilizes CSS custom properties (variables) for a consistent and maintainable design system,
 * and incorporates modern CSS layout and animation techniques.
 */

/* --- CSS Variables (Design Tokens) --- */
/* These variables define the core colors, spacing, shadows, and transitions used throughout the dashboard. */
:root {
    --primary-color: #2563eb;
    --primary-hover: #1d4ed8;
    --success-color: #10b981;
    --success-light: #d1fae5;
    --warning-color: #f59e0b;
    --warning-light: #fef3c7;
    --error-color: #ef4444;
    --error-light: #fee2e2;
    --info-color: #3b82f6;
    --info-light: #dbeafe;
    --bg-color: #f8fafc;
    --card-bg: #ffffff;
    --text-primary: #1e293b;
    --text-secondary: #64748b;
    --text-muted: #94a3b8;
    --border-color: #e2e8f0;
    --border-hover: #cbd5e1;
    --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    --radius-sm: 0.25rem;
    --radius: 0.375rem; /* Base border-radius for general elements */
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

/* --- Base Styles & Reset --- */
/* Universal box-sizing and reset for margin/padding to ensure consistent rendering. */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    background-color: var(--bg-color);
    color: var(--text-primary);
    line-height: 1.6;
    font-size: 14px; /* Base font size for the document */
    -webkit-font-smoothing: antialiased; /* Improves font rendering on macOS */
    -moz-osx-font-smoothing: grayscale; /* Improves font rendering on macOS Firefox */
}

/* --- Header Section --- */
.header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-hover) 100%);
    color: white;
    padding: 1.25rem 2rem;
    box-shadow: var(--shadow-lg);
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: sticky; /* Makes the header stick to the top */
    top: 0;
    z-index: 100; /* Ensures header is above other content */
    backdrop-filter: blur(8px); /* Creates a frosted glass effect for content behind it */
}

.header h1 {
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: -0.025em;
}

.header nav {
    display: flex;
    gap: 0.5rem;
}

.header nav a {
    color: white;
    text-decoration: none;
    padding: 0.625rem 1rem;
    border-radius: var(--radius);
    transition: var(--transition);
    font-weight: 500;
    font-size: 0.875rem;
}

.header nav a:hover {
    background-color: rgba(255, 255, 255, 0.15);
    transform: translateY(-1px); /* Subtle lift effect */
}

/* --- Layout Containers --- */
.container {
    max-width: 1400px;
    margin: 2rem auto; /* Centers the container horizontally */
    padding: 0 1rem;
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); /* Responsive grid columns */
    gap: 1.5rem;
    margin-bottom: 2rem;
}

/* --- Card Component --- */
.card {
    background: var(--card-bg);
    border-radius: var(--radius-md);
    padding: 1.5rem;
    box-shadow: var(--shadow);
    border: 1px solid var(--border-color);
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

.card:hover {
    box-shadow: var(--shadow-md);
    border-color: var(--border-hover);
    transform: translateY(-2px); /* Subtle lift effect on hover */
}

/* Dynamic top border for cards on hover, indicating interactivity */
.card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--primary-color), var(--info-color));
    opacity: 0;
    transition: var(--transition);
}
.card:hover::before {
    opacity: 1;
}

.card h2 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 1.25rem;
    color: var(--text-primary);
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.card-controls {
    display: flex;
    gap: 0.75rem;
    margin-bottom: 1.25rem;
    align-items: center;
    flex-wrap: wrap;
}

/* --- Status Indicators --- */
.status-indicator {
    display: inline-block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 0.5rem;
    position: relative;
    animation: pulse 2s infinite; /* Visual cue for live status */
}

/* Inner pulse effect for status indicators, creating a ripple effect */
.status-indicator::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50%;
    border: 2px solid currentColor; /* Uses the color of the parent status */
    opacity: 0.3;
}

.status-healthy {
    background-color: var(--success-color);
    color: var(--success-color);
}

.status-error {
    background-color: var(--error-color);
    color: var(--error-color);
}

.status-active {
    color: var(--success-color);
    font-weight: 600;
}

.status-limited {
    color: var(--warning-color);
    font-weight: 600;
}

.status-quarantined {
    color: var(--error-color);
    font-weight: 600;
}

/* Keyframe animation for the pulsing effect */
@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* --- Metrics Display --- */
.metric {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.875rem 0;
    border-bottom: 1px solid var(--border-color);
    transition: var(--transition-fast);
}

.metric:last-child {
    border-bottom: none; /* Removes border from the last item */
}

/* Hover effect for individual metrics, expanding slightly */
.metric:hover {
    background-color: #f8fafc;
    margin: 0 -0.5rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    border-radius: var(--radius-sm);
}

.metric-label {
    color: var(--text-secondary);
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    font-weight: 500;
}

.metric-value {
    font-weight: 700;
    color: var(--text-primary);
    font-size: 1rem;
}

.metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.metric-card {
    text-align: center;
    padding: 1.25rem;
    border-radius: var(--radius);
    border: 1px solid var(--border-color);
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

/* Top border for metric cards, indicating category or status */
.metric-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    transition: var(--transition);
}

.metric-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

/* Specific styles for different metric card types, using gradients and colors */
.metric-card.total {
    background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
}

.metric-card.total::before {
    background: var(--text-secondary);
}

.metric-card.active {
    background: linear-gradient(135deg, var(--success-light) 0%, #ecfdf5 100%);
    border-color: var(--success-color);
}

.metric-card.active::before {
    background: var(--success-color);
}

.metric-card.limited {
    background: linear-gradient(135deg, var(--warning-light) 0%, #fffbeb 100%);
    border-color: var(--warning-color);
}

.metric-card.limited::before {
    background: var(--warning-color);
}

.metric-card.invalid {
    background: linear-gradient(135deg, var(--error-light) 0%, #fef2f2 100%);
    border-color: var(--error-color);
}

.metric-card.invalid::before {
    background: var(--error-color);
}

.metric-card.unavailable {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-color: var(--text-muted);
}

.metric-card.unavailable::before {
    background: var(--text-muted);
}

.metric-card .metric-value {
    font-size: 1.75rem;
    font-weight: 800;
    display: block;
    line-height: 1.2;
}

.metric-card .metric-label {
    font-size: 0.75rem;
    color: var(--text-secondary);
    margin-top: 0.5rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.metric-percentage {
    font-size: 0.75rem;
    color: var(--success-color);
    font-weight: 600;
    background-color: var(--success-light);
    padding: 0.125rem 0.375rem;
    border-radius: var(--radius-sm);
    margin-left: 0.5rem;
}

/* --- Groups Summary --- */
.groups-summary {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 2px solid var(--border-color);
}

.groups-summary h4 {
    font-size: 0.875rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.group-summary {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    font-size: 0.875rem;
    border-radius: var(--radius-sm);
    transition: var(--transition-fast);
}

.group-summary:hover {
    background-color: #f8fafc;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
}

.group-name {
    font-weight: 600;
    color: var(--text-primary);
}

.group-stats {
    color: var(--text-secondary);
    font-weight: 500;
}

/* --- Model Statistics --- */
.model-stats-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.stats-header {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin-bottom: 1.25rem;
    padding: 0.75rem;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-radius: var(--radius);
    text-align: center;
    font-weight: 600;
    border: 1px solid var(--border-color);
}

.model-stat-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    background: linear-gradient(135deg, #fafafa 0%, #ffffff 100%);
    transition: var(--transition);
}

.model-stat-item:hover {
    box-shadow: var(--shadow-md);
    border-color: var(--primary-color);
    transform: translateY(-1px);
}

.model-info {
    flex: 1;
}

.model-name {
    font-weight: 700;
    color: var(--text-primary);
    font-size: 0.95rem;
}

.model-details {
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin-top: 0.375rem;
    font-weight: 500;
}

.blocked-count {
    color: var(--warning-color);
    font-weight: 700;
    background-color: var(--warning-light);
    padding: 0.125rem 0.375rem;
    border-radius: var(--radius-sm);
}

.reset-time {
    margin-left: 0.75rem;
    font-size: 0.8rem;
    color: var(--text-muted);
}

.model-progress {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    min-width: 120px;
}

.progress-bar {
    flex: 1;
    height: 10px;
    background-color: var(--border-color);
    border-radius: 5px;
    overflow: hidden;
    position: relative;
}

/* Shimmer animation for progress bar to indicate activity */
.progress-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.3) 50%, transparent 100%);
    animation: shimmer 2s infinite;
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--warning-color) 0%, #f97316 100%);
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 5px;
}

.progress-text {
    font-size: 0.75rem;
    font-weight: 700;
    color: var(--text-secondary);
    min-width: 40px;
    text-align: right;
}

/* Keyframe animation for the shimmer effect */
@keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* --- API Keys Status --- */
.key-list {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
}

.group-section {
    margin-bottom: 2rem;
}

.group-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid var(--border-color);
    position: relative;
}

/* Decorative underline for group headers */
.group-header::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 60px;
    height: 2px;
    background: var(--primary-color);
}

.group-header h3 {
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--text-primary);
}

.group-stats {
    display: flex;
    gap: 1rem;
    font-size: 0.875rem;
    flex-wrap: wrap;
}

.stat-item {
    padding: 0.375rem 0.75rem;
    border-radius: var(--radius);
    font-weight: 600;
    transition: var(--transition);
    border: 1px solid transparent;
}

.stat-item:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow);
}

/* Specific styles for different stat item types */
.stat-item.active {
    background: linear-gradient(135deg, var(--success-light) 0%, #ecfdf5 100%);
    color: var(--success-color);
    border-color: var(--success-color);
}

.stat-item.limited {
    background: linear-gradient(135deg, var(--warning-light) 0%, #fffbeb 100%);
    color: var(--warning-color);
    border-color: var(--warning-color);
}

.stat-item.invalid {
    background: linear-gradient(135deg, var(--error-light) 0%, #fef2f2 100%);
    color: var(--error-color);
    border-color: var(--error-color);
}

.key-group {
    display: grid;
    gap: 1rem;
}

.key-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.25rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    background: linear-gradient(135deg, var(--card-bg) 0%, #fafafa 100%);
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

/* Left border for key status indication */
.key-item::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    transition: var(--transition);
}

.key-item:hover {
    box-shadow: var(--shadow-md);
    border-color: var(--primary-color);
    transform: translateY(-2px);
}

/* Colors for key status left border, indicating health/availability */
.key-item.available::before {
    background: linear-gradient(180deg, var(--success-color) 0%, #059669 100%);
}

.key-item.limited::before {
    background: linear-gradient(180deg, var(--warning-color) 0%, #d97706 100%);
}

.key-item.unavailable::before {
    background: linear-gradient(180deg, var(--text-secondary) 0%, #475569 100%);
}

.key-item.invalid::before {
    background: linear-gradient(180deg, var(--error-color) 0%, #dc2626 100%);
}

.key-info {
    flex: 1;
}

.key-preview {
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace; /* Monospaced font for API keys */
    font-size: 0.875rem;
    font-weight: 700;
    color: var(--text-primary);
    letter-spacing: 0.025em;
}

.key-id {
    color: var(--text-secondary);
    font-size: 0.75rem;
    font-weight: 500;
    margin-top: 0.25rem;
}

.model-blocks {
    margin-top: 0.75rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.375rem;
}

.model-block {
    background: linear-gradient(135deg, var(--warning-light) 0%, #fef3c7 100%);
    color: #92400e;
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius-sm);
    font-size: 0.75rem;
    font-weight: 600;
    border: 1px solid #fbbf24;
    transition: var(--transition-fast);
}

.model-block:hover {
    transform: scale(1.05); /* Slight enlargement on hover */
    box-shadow: var(--shadow);
}

.key-status {
    padding: 0.375rem 0.875rem;
    border-radius: var(--radius);
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    margin: 0 1rem;
    letter-spacing: 0.05em;
    border: 1px solid transparent;
}

.key-controls {
    display: flex;
    gap: 0.75rem;
    align-items: center;
}

/* --- Buttons --- */
.key-btn, .refresh-btn, .toggle-refresh-btn {
    padding: 0.625rem 1.25rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    background: linear-gradient(135deg, var(--card-bg) 0%, #f8fafc 100%);
    color: var(--text-primary);
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

/* Shimmer effect for buttons on hover */
.key-btn::before, .refresh-btn::before, .toggle-refresh-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
    transition: left 0.5s;
}

.key-btn:hover::before, .refresh-btn:hover::before, .toggle-refresh-btn:hover::before {
    left: 100%;
}

.key-btn:hover, .refresh-btn:hover, .toggle-refresh-btn:hover {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-hover) 100%);
    color: white;
    border-color: var(--primary-color);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.key-btn:active, .refresh-btn:active, .toggle-refresh-btn:active {
    transform: translateY(0); /* Resets transform on click */
}

.key-btn:disabled, .refresh-btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
}

.key-btn:disabled:hover, .refresh-btn:disabled:hover {
    background: linear-gradient(135deg, var(--card-bg) 0%, #f8fafc 100%);
    color: var(--text-primary);
    border-color: var(--border-color);
}

/* Specific button states (loading, success, error, etc.) */
.key-btn.loading {
    background: linear-gradient(135deg, var(--info-color) 0%, #2563eb 100%);
    color: white;
    animation: pulse 1.5s infinite; /* Reuses pulse animation for loading state */
}

.key-btn.success {
    background: linear-gradient(135deg, var(--success-color) 0%, #059669 100%);
    color: white;
    border-color: var(--success-color);
}

.key-btn.error {
    background: linear-gradient(135deg, var(--error-color) 0%, #dc2626 100%);
    color: white;
    border-color: var(--error-color);
}

.verify-btn {
    border-color: var(--info-color);
    color: var(--info-color);
    background: linear-gradient(135deg, var(--info-light) 0%, #eff6ff 100%);
}

.verify-btn:hover {
    background: linear-gradient(135deg, var(--info-color) 0%, #2563eb 100%);
    color: white;
}

.reset-btn {
    border-color: var(--warning-color);
    color: var(--warning-color);
    background: linear-gradient(135deg, var(--warning-light) 0%, #fffbeb 100%);
}

.reset-btn:hover {
    background: linear-gradient(135deg, var(--warning-color) 0%, #d97706 100%);
    color: white;
}

.refresh-btn {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-hover) 100%);
    color: white;
    border-color: var(--primary-color);
}

.refresh-btn.auto-refresh-disabled {
    background: linear-gradient(135deg, var(--text-secondary) 0%, #475569 100%);
    border-color: var(--text-secondary);
}

.toggle-refresh-btn {
    padding: 0.625rem; /* Ensures a square button */
    min-width: 44px; /* Recommended minimum touch target size for accessibility */
    display: flex;
    align-items: center;
    justify-content: center;
}

/* --- Loading and Error States --- */
.loading {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 3rem;
    color: var(--text-secondary);
    font-style: italic;
    font-weight: 500;
}

/* Spinner animation for loading state */
.loading::before {
    content: '';
    width: 20px;
    height: 20px;
    border: 2px solid var(--border-color);
    border-top-color: var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-right: 0.75rem;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

.error {
    color: var(--error-color);
    background: linear-gradient(135deg, var(--error-light) 0%, #fef2f2 100%);
    border: 1px solid #fca5a5;
    border-radius: var(--radius);
    padding: 1.25rem;
    margin: 0.75rem 0;
    font-weight: 500;
    position: relative;
    padding-left: 3rem; /* Space for the icon */
}

/* Error icon using a pseudo-element */
.error::before {
    content: '⚠'; /* Unicode warning sign */
    position: absolute;
    left: 1rem;
    top: 1.25rem;
    font-size: 1.125rem;
}

.info {
    color: var(--info-color);
    background: linear-gradient(135deg, var(--info-light) 0%, #eff6ff 100%);
    border: 1px solid #93c5fd;
    border-radius: var(--radius);
    padding: 1.25rem;
    margin: 0.75rem 0;
    font-weight: 500;
    position: relative;
    padding-left: 3rem; /* Space for the icon */
}

/* Info icon using a pseudo-element */
.info::before {
    content: 'ℹ'; /* Unicode info sign */
    position: absolute;
    left: 1rem;
    top: 1.25rem;
    font-size: 1.125rem;
}

/* --- Notifications (Toasts) --- */
.notification {
    position: fixed;
    top: 1.5rem;
    right: 1.5rem;
    padding: 1.25rem 1.75rem;
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-lg);
    z-index: 1000;
    cursor: pointer;
    max-width: 420px;
    font-weight: 600;
    animation: slideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid transparent;
    backdrop-filter: blur(8px); /* Frosted glass effect for notifications */
}

.notification:hover {
    transform: translateY(-2px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); /* Enhanced shadow on hover */
}

/* Notification types based on status */
.notification.success {
    background: linear-gradient(135deg, var(--success-color) 0%, #059669 100%);
    color: white;
    border-color: #10b981;
}

.notification.error {
    background: linear-gradient(135deg, var(--error-color) 0%, #dc2626 100%);
    color: white;
    border-color: #ef4444;
}

.notification.info {
    background: linear-gradient(135deg, var(--info-color) 0%, #2563eb 100%);
    color: white;
    border-color: #3b82f6;
}

/* Keyframe animation for notification entry (sliding in from top-right) */
@keyframes slideIn {
    from {
        transform: translateX(100%) translateY(-50px);
        opacity: 0;
    }
    to {
        transform: translateX(0) translateY(0);
        opacity: 1;
    }
}

/* --- Responsive Design (Media Queries) --- */

/* Styles for screens up to 768px wide (e.g., tablets and large phones) */
@media (max-width: 768px) {
    .header {
        flex-direction: column; /* Stacks header items vertically */
        gap: 1rem;
        text-align: center;
        padding: 1rem;
    }

    .container {
        padding: 0 0.75rem;
        margin: 1rem auto;
    }

    .grid {
        grid-template-columns: 1fr; /* Single column layout for main content */
        gap: 1rem;
    }

    .metrics-grid {
        grid-template-columns: repeat(2, 1fr); /* Two columns for metrics */
        gap: 0.75rem;
    }

    .key-item {
        flex-direction: column;
        align-items: stretch; /* Stacks key info and controls vertically */
        gap: 1rem;
        padding: 1rem;
    }

    .key-controls {
        justify-content: center;
        flex-wrap: wrap;
    }

    .group-header {
        flex-direction: column;
        align-items: stretch;
        gap: 0.75rem;
    }

    .group-stats {
        justify-content: center;
        flex-wrap: wrap;
    }

    .model-stat-item {
        flex-direction: column;
        align-items: stretch;
        gap: 0.75rem;
        padding: 1rem;
    }

    .model-progress {
        justify-content: center;
        min-width: auto; /* Allows progress bar to shrink */
    }

    .card {
        padding: 1.25rem;
    }

    .metric-card {
        padding: 1rem;
    }
}

/* Styles for screens up to 480px wide (e.g., smaller phones) */
@media (max-width: 480px) {
    .metrics-grid {
        grid-template-columns: 1fr; /* Single column for metrics on very small screens */
    }

    .card {
        padding: 1rem;
        margin: 0 0.25rem;
    }

    .notification {
        left: 1rem;
        right: 1rem;
        max-width: none; /* Full width notifications */
        top: 1rem;
    }

    .header {
        padding: 0.75rem;
    }

    .container {
        padding: 0 0.5rem;
    }

    .key-btn, .refresh-btn, .toggle-refresh-btn {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
    }

    .model-stat-item {
        padding: 0.75rem;
    }

    .group-header h3 {
        font-size: 1rem;
    }
}

/* --- Dark Mode Support --- */
/* Overrides variables for dark theme based on user's system preference */
@media (prefers-color-scheme: dark) {
    :root {
        --bg-color: #0f172a;
        --card-bg: #1e293b;
        --text-primary: #f1f5f9;
        --text-secondary: #cbd5e1;
        --text-muted: #94a3b8;
        --border-color: #334155;
        --border-hover: #475569;
    }

    .card:hover::before {
        opacity: 0.8; /* Slightly less opaque hover effect in dark mode */
    }

    .metric-card.total {
        background: linear-gradient(135deg, #334155 0%, #475569 100%);
    }

    .model-stat-item {
        background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
    }
}

/* --- Accessibility Improvements --- */

/* Reduces animations and transitions for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* Focus styles for keyboard navigation (using :focus-visible for better UX) */
.key-btn:focus-visible, .refresh-btn:focus-visible, .toggle-refresh-btn:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

.header nav a:focus-visible {
    outline: 2px solid rgba(255, 255, 255, 0.5);
    outline-offset: 2px;
}