services:
  gemini-proxy:
    build:
      context: .
      target: runtime
      args:
      - RUST_VERSION=latest
      - APP_NAME=gemini-proxy
    container_name: gemini-proxy
    ports:
    - 4806:4806
    volumes:
    - ./config.yaml:/app/config.yaml:ro
    - app_data:/app/data
    - runtime_cache:/app/runtime-cache
    environment:
    - RUST_LOG=${RUST_LOG:-info}
    - RUST_BACKTRACE=${RUST_BACKTRACE:-0}
    - PORT=4806
    - HF_HOME=/app/runtime-cache/HF_CACHE
    - XDG_CACHE_HOME=/app/runtime-cache
    - REDIS_URL=redis://redis:6379/0
    command:
    - /app/gemini-proxy
    - --config
    - /app/config.yaml
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test:
      - CMD
      - /app/busybox
      - wget
      - -qO-
      - http://127.0.0.1:4806/health
      interval: 15s
      timeout: 10s
      start_period: 30s
      retries: 5
    networks:
    - gemini-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
  redis:
    image: redis:7.2-alpine
    container_name: gemini-proxy-redis
    ports:
    - ${REDIS_PORT:-6379}:6379
    volumes:
    - redis_data:/data
    - ./monitoring/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test:
      - CMD-SHELL
      - |
        redis-cli ping | grep PONG &&
        redis-cli info memory | grep -q "used_memory:" &&
        [ $$(redis-cli info memory | grep "used_memory_rss:" | cut -d: -f2 | tr -d '\r') -lt 400000000 ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
    - gemini-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M  # Increase memory limit
        reservations:
          cpus: '0.1'
          memory: 128M  # Increase reservation
  gemini-proxy-dev:
    build:
      context: .
      target: development
    container_name: gemini-proxy-dev
    ports:
    - 4807:4806
    volumes:
    - .:/app
    - cargo_cache:/usr/local/cargo/registry
    - target_cache:/app/target
    environment:
    - RUST_LOG=debug
    - RUST_BACKTRACE=1
    depends_on:
      redis:
        condition: service_healthy
    profiles:
    - dev
    networks:
    - gemini-network
  test-runner:
    build:
      context: .
      target: testing
    container_name: gemini-proxy-test
    volumes:
    - .:/app
    - cargo_cache:/usr/local/cargo/registry
    environment:
    - RUST_LOG=debug
    - RUST_BACKTRACE=1
    depends_on:
      redis:
        condition: service_healthy
    profiles:
    - test
    networks:
    - gemini-network
  coverage-runner:
    build:
      context: .
      target: coverage
    container_name: gemini-proxy-coverage
    volumes:
    - .:/app
    - ./coverage_report:/app/coverage_report
    - cargo_cache:/usr/local/cargo/registry
    depends_on:
      redis:
        condition: service_healthy
    profiles:
    - coverage
    networks:
    - gemini-network
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: gemini-proxy-redis-ui
    environment:
    - REDIS_HOSTS=local:redis:6379
    - HTTP_USER=${REDIS_UI_USER:-admin}
    - HTTP_PASSWORD=${REDIS_UI_PASSWORD:-admin}
    ports:
    - ${REDIS_UI_PORT:-8082}:8081
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    profiles:
    - tools
    networks:
    - gemini-network
volumes:
  redis_data:
    driver: local
  app_data:
    driver: local
  cargo_cache:
    driver: local
  target_cache:
    driver: local
  runtime_cache: null
networks:
  gemini-network:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.0.0/16
