version: '3.8'

services:
  gemini-proxy:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    ports:
      - "${SERVER_PORT_HOST:-8081}:${SERVER_PORT_CONTAINER:-8080}"
    environment:
      # Server configuration
      RUST_LOG: ${RUST_LOG:-info}
      RUST_BACKTRACE: ${RUST_BACKTRACE:-1}
      
      # API Keys - Default group
      GEMINI_PROXY_GROUP_DEFAULT_API_KEYS: ${GEMINI_PROXY_GROUP_DEFAULT_API_KEYS}
      GEMINI_PROXY_GROUP_DEFAULT_PROXY_URL: ${GEMINI_PROXY_GROUP_DEFAULT_PROXY_URL:-}
      GEMINI_PROXY_GROUP_DEFAULT_TARGET_URL: ${GEMINI_PROXY_GROUP_DEFAULT_TARGET_URL:-}
      
      # Additional groups can be added here following the same pattern
      # GEMINI_PROXY_GROUP_BACKUP_API_KEYS: ${GEMINI_PROXY_GROUP_BACKUP_API_KEYS}
      # GEMINI_PROXY_GROUP_BACKUP_PROXY_URL: ${GEMINI_PROXY_GROUP_BACKUP_PROXY_URL:-}
    volumes:
      - ./key_states.json:/app/key_states.json
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT_CONTAINER:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - monitoring
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=${SERVER_PORT_CONTAINER:-8080}"
      - "prometheus.path=/metrics"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./monitoring/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./monitoring/nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - gemini-proxy
      - grafana

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  monitoring:
    driver: bridge