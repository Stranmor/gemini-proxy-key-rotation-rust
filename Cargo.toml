[package]
name = "gemini-proxy-key-rotation-rust" # More descriptive name
version = "0.1.0"
edition = "2021"
authors = ["stranmor <stranmor@gmail.com>"] # Author info
description = "A lightweight, asynchronous HTTP proxy for rotating Google Gemini API keys using Axum."
license = "MIT" # Matches LICENSE file
repository = "https://github.com/stranmor/gemini-proxy-key-rotation-rust" # Actual repo URL
readme = "README.md"
keywords = ["gemini", "google", "api", "proxy", "axum", "rust", "load-balancing", "key-rotation"]
categories = ["web-programming::proxy", "api-bindings", "network-programming"]

[dependencies]
# Web framework
axum = "~0.7.5"
tower = { version = "~0.4.13", features = ["util"] } # Added for ServiceBuilder and middleware utilities
# Async runtime
tokio = { version = "~1.37.0", features = ["rt-multi-thread", "macros", "signal", "sync"] }
# HTTP client
# Attempting to upgrade to the latest compatible version.
reqwest = { version = "~0.12.22", features = ["json", "native-tls", "stream", "socks"], default-features = false }
# Serialization/Deserialization
serde = { version = "~1.0.203", features = ["derive"] }
serde_yaml = "~0.9.34"
serde_json = "~1.0.120" # Added for AppError JSON response
# Error handling
thiserror = "~1.0.61"
# URL parsing
url = "~2.5.2" # Keep for config validation
# Async stream utilities
futures-util = "~0.3.31" # Needed for stream mapping
# Logging and tracing
tracing = "~0.1.40"
tracing-subscriber = { version = "~0.3.18", features = ["env-filter", "fmt", "json"] } # Added "json" feature
# Time handling
chrono = { version = "~0.4.38", features = ["serde"] }
chrono-tz = "~0.9.0" # Needed for specific timezone reset logic
# Command-line argument parsing
clap = { version = "~4.5.8", features = ["derive"] }
uuid = { version = "~1.9.1", features = ["v4"] } # Updated version specifier, kept 1.x for stability

# Standard library types like Arc, AtomicUsize, Mutex/RwLock are used directly

# Add lint configuration for better code quality checks
# See: https://doc.rust-lang.org/clippy/lints.html
[lints.clippy]
pedantic = "warn" # Enable more lints, but as warnings
nursery = "warn"
# Examples of disabling specific lints if needed:
# module_name_repetitions = "allow"
# cast_possible_truncation = "allow"
#missing_errors_doc = "allow" # Allow missing doc comments for errors temporarily
#missing_panics_doc = "allow" # Allow missing doc comments for panics temporarily

[profile.release]
lto = true           # Enable Link Time Optimization
codegen-units = 1    # Reduce parallelism for better optimization
strip = true         # Strip symbols for smaller binary size
opt-level = "z"      # Optimize for size ("s" is also an option)
panic = "abort"      # Abort on panic for smaller binary

# Dependencies only used for tests, examples, benchmarks
[dev-dependencies]
wiremock = "~0.6.1" # Mocking HTTP server
tempfile = "~3.10.1" # For creating temporary files/dirs in tests
http-body-util = { version = "~0.1.2", features = ["full"] } # For working with bodies in tests
serial_test = "~3.1.1" # For serializing tests modifying std::env
