[package]
name = "gemini-proxy"
version = "0.2.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "Production-ready HTTP proxy for Google Gemini API with intelligent key rotation"
license = "MIT"
repository = "https://github.com/stranmor/gemini-proxy-key-rotation-rust"
homepage = "https://github.com/stranmor/gemini-proxy-key-rotation-rust"
documentation = "https://docs.rs/gemini-proxy"
keywords = ["proxy", "gemini", "api", "rotation", "load-balancing"]
categories = ["web-programming", "network-programming", "api-bindings"]
readme = "README.md"
rust-version = "1.70"

[[bin]]
name = "gemini-proxy"
path = "src/main.rs"

[[example]]
name = "circuit_breaker_demo"
path = "examples/circuit_breaker_demo.rs"

[dependencies]
# Web framework and HTTP
axum = { version = "0.7.9", features = ["macros", "tracing"] }
tower = { version = "0.5.2", features = ["util", "timeout", "load-shed", "limit"] }
tower-http = { version = "0.6.6", features = ["timeout", "trace", "cors", "compression-gzip"] }
hyper = { version = "1.7.0", features = ["full"] }
hyper-util = { version = "0.1.17", features = ["full"] }
http = "1.3.1"
http-body-util = "0.1.3"

# Async runtime and utilities
tokio = { version = "1.47.1", features = ["full"] }
tokio-util = { version = "0.7.16", features = ["full"] }
futures-util = "0.3.31"
async-trait = "0.1.89"

# HTTP client
reqwest = { version = "0.12.23", features = ["json", "stream", "gzip", "rustls-tls"], default-features = false }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# Configuration
config = { version = "0.14.1", features = ["yaml"] }
clap = { version = "4.5.46", features = ["derive", "env"] }

# Logging and tracing
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "json", "registry", "fmt"] }
tracing-opentelemetry = "0.22"
opentelemetry = { version = "0.21.0" }
opentelemetry_sdk = { version = "0.21.2", features = ["rt-tokio"] }

# Error handling
thiserror = "1.0.69"
anyhow = "1.0.100"

# Security and crypto
secrecy = { version = "0.8", features = ["serde"] }
argon2 = "0.5"
rand = "0.8.5"
hex = "0.4.3"
sha2 = "0.10"

# Time and UUID
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.18.1", features = ["v4", "serde"] }

# Redis and storage
redis = { version = "0.25.4", features = ["tokio-comp", "connection-manager"], optional = true }
deadpool = "0.12.2"
deadpool-redis = { version = "0.15.0", optional = true }

# Metrics and monitoring
metrics = { version = "0.22", optional = true }
metrics-exporter-prometheus = { version = "0.17.2", optional = true }

# Rate limiting and circuit breaker
governor = "0.6.3"
circuit_breaker = "0.1"

# Validation
validator = { version = "0.19.0", features = ["derive"] }
url = "2.5.7"
regex = "1.11.2"

# Utilities
once_cell = "1.21.3"
parking_lot = "0.12"
dashmap = "5.5.3"
base64 = "0.22.1"
tempfile = "3.22.0"

# Session and cookies
cookie = { version = "0.18.1", features = ["private", "signed"] }
tower-cookies = { version = "0.10.0", features = ["private"] }
axum-extra = { version = "0.9.6", features = ["tracing", "typed-header", "cookie", "cookie-private"] }

# System info
sysinfo = { version = "0.36.1", features = ["serde"] }
md5 = "0.7.0"

# Optional features
tiktoken-rs = { version = "0.5.9" }
# sentencepiece = { version = "0.11.3", optional = true } # Compilation issues

[dev-dependencies]
# Testing framework
tokio-test = "0.4.4"
axum-test = "15.7.4"
rstest = "0.21.0"
serial_test = "3.2.0"
proptest = "1.7.0"

# Test utilities
assert_cmd = "2.0.17"
predicates = "3.1.3"
wiremock = "0.6.5"
tempfile = "3.22.0"
futures = "0.3.31"

# Benchmarking
criterion = { version = "0.5.1", features = ["html_reports"] }

# Test coverage
cargo-tarpaulin = "0.27.3"

[features]
default = ["metrics", "redis", "tokenizer"]
metrics = ["dep:metrics", "dep:metrics-exporter-prometheus"]
redis = ["dep:redis", "dep:deadpool-redis"]
tokenizer = []

[profile.release]
opt-level = 3
lto = "thin"  # Faster than full LTO
codegen-units = 16  # Parallel compilation
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true
incremental = true

[profile.dev.package."*"]
opt-level = 2  # Optimize dependencies in dev mode

[profile.test]
opt-level = 1
debug = true

# [[bench]]
# name = "proxy_performance"
# harness = false
