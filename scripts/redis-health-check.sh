#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è Redis
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/redis-health-check.sh

set -euo pipefail

REDIS_CONTAINER="gemini-proxy-redis"
LOG_FILE="/tmp/redis-health-$(date +%Y%m%d-%H%M%S).log"

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Redis - $(date)" | tee "$LOG_FILE"
echo "=================================" | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:" | tee -a "$LOG_FILE"
docker ps --filter "name=$REDIS_CONTAINER" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
echo -e "\nüíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:" | tee -a "$LOG_FILE"
docker stats "$REDIS_CONTAINER" --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}" | tee -a "$LOG_FILE"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Redis
echo -e "\nüìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è Redis:" | tee -a "$LOG_FILE"
docker exec "$REDIS_CONTAINER" redis-cli INFO memory | grep -E "(used_memory|maxmemory|mem_fragmentation)" | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
echo -e "\nüö® –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:" | tee -a "$LOG_FILE"
docker logs "$REDIS_CONTAINER" --tail 50 2>&1 | grep -i -E "(error|warning|oom|killed|restart)" | tail -10 | tee -a "$LOG_FILE" || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤ –Ω–∞ OOM kills
echo -e "\n‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ OOM kills:" | tee -a "$LOG_FILE"
if command -v dmesg >/dev/null 2>&1; then
    dmesg | grep -i "killed process" | grep -i redis | tail -5 | tee -a "$LOG_FILE" || echo "OOM kills –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" | tee -a "$LOG_FILE"
else
    echo "dmesg –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)" | tee -a "$LOG_FILE"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
echo -e "\n‚è±Ô∏è  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã Redis:" | tee -a "$LOG_FILE"
docker exec "$REDIS_CONTAINER" redis-cli INFO server | grep uptime_in_seconds | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
echo -e "\nüîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è:" | tee -a "$LOG_FILE"
docker exec "$REDIS_CONTAINER" redis-cli INFO clients | grep connected_clients | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
echo -e "\nüíæ –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å:" | tee -a "$LOG_FILE"
docker exec "$REDIS_CONTAINER" redis-cli LASTSAVE | tee -a "$LOG_FILE"

echo -e "\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $LOG_FILE"
echo "üìã –î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: watch -n 30 ./scripts/redis-health-check.sh"