apiVersion: apps/v1
kind: Deployment
metadata:
  name: gemini-proxy
  labels:
    app: gemini-proxy
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: gemini-proxy
  template:
    metadata:
      labels:
        app: gemini-proxy
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: gemini-proxy
        image: gemini-proxy:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
        - name: GEMINI_PROXY_GROUP_DEFAULT_API_KEYS
          valueFrom:
            secretKeyRef:
              name: gemini-api-keys
              key: default-keys
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
          readOnly: true
        - name: key-states
          mountPath: /app/key_states.json
          subPath: key_states.json
      volumes:
      - name: config
        configMap:
          name: gemini-proxy-config
      - name: key-states
        persistentVolumeClaim:
          claimName: gemini-proxy-state
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: gemini-proxy-service
  labels:
    app: gemini-proxy
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: gemini-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gemini-proxy-config
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
    groups: []
---
apiVersion: v1
kind: Secret
metadata:
  name: gemini-api-keys
type: Opaque
stringData:
  default-keys: "your-api-key-1,your-api-key-2"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gemini-proxy-state
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi